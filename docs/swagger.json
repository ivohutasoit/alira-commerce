{
    "swagger": "2.0",
    "info": {
        "description": "Documentation of Alira commerce provides capability to manage customer store, inventory and sales order",
        "title": "Alira Commerce API",
        "termsOfService": "https://commerce.alira.com/terms/",
        "contact": {
            "name": "Alira Support",
            "url": "https://www.commerce.alira.com/support",
            "email": "hello@alira.com"
        },
        "license": {
            "name": "GNU General Public License v3.0",
            "url": "https://www.gnu.org/licenses/gpl-3.0.en.html"
        },
        "version": "alpha"
    },
    "host": "aliracommerce.herokuapp.com",
    "basePath": "/api/alpha",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Handler user authentication",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in user",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": {\"user_id\": \"UserID\", \"use_pin\": \"UsePin\", \"purpose\": \"Purpose\"}}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "description": "Handler log out authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/token": {
            "post": {
                "description": "Authentication token verification handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify token",
                "parameters": [
                    {
                        "description": "Authentication Token",
                        "name": "token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Token"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/category": {
            "get": {
                "description": "List of product category based on customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "List of Store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order": {
            "post": {
                "description": "Create order by store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales Order"
                ],
                "summary": "Create order",
                "parameters": [
                    {
                        "description": "Store order",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StoreOrder"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/search": {
            "post": {
                "description": "Find order based on customer or store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales Order"
                ],
                "summary": "Find orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/order/{id}": {
            "get": {
                "description": "Detail of order based on id or reference number provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales Order"
                ],
                "summary": "Order detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "order id or reference number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "Detail of product based on id provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Product information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new product based on customer and or store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Create new product",
                "parameters": [
                    {
                        "description": "Store product",
                        "name": "store",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.StoreProduct"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/search": {
            "post": {
                "description": "Find order based on customer or store",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Find orders",
                "parameters": [
                    {
                        "description": "Store product search",
                        "name": "search",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SearchProduct"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "Detail of product based on id provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product"
                ],
                "summary": "Product information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "product id or barcode",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/store": {
            "get": {
                "description": "List of store based on customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Store"
                ],
                "summary": "List of Store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create new store with",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Store"
                ],
                "summary": "Create new store",
                "parameters": [
                    {
                        "description": "Store info",
                        "name": "store",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Store"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/store/search": {
            "post": {
                "description": "Find store based on parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Store"
                ],
                "summary": "Search Store",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/store/{id}": {
            "get": {
                "description": "Detail of store based on id provided",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Store"
                ],
                "summary": "Store information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "store id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/pin": {
            "post": {
                "description": "Update authenticated user pin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change user pin",
                "parameters": [
                    {
                        "description": "User pin",
                        "name": "pin",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Pin"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer [accessing token]",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"code\": 200, \"status\": \"OK\", \"message\": \"Success\", \"data\": \"data\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "{\"code\": 400, \"status\": \"Bad request\", \"error\": \"Error\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Login": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "type": "string"
                }
            }
        },
        "model.OrderProduct": {
            "type": "object",
            "required": [
                "currency",
                "id",
                "price",
                "qty"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "qty": {
                    "type": "integer"
                }
            }
        },
        "model.Pin": {
            "type": "object",
            "required": [
                "code"
            ],
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "model.SearchProduct": {
            "type": "object",
            "required": [
                "keyword"
            ],
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.StoreProduct"
                    }
                },
                "total_page": {
                    "type": "integer"
                },
                "total_record": {
                    "type": "integer"
                }
            }
        },
        "model.Store": {
            "type": "object",
            "required": [
                "address",
                "code",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                }
            }
        },
        "model.StoreOrder": {
            "type": "object",
            "required": [
                "currency",
                "date",
                "products",
                "status",
                "store",
                "teller",
                "time",
                "total"
            ],
            "properties": {
                "currency": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "payment_mode": {
                    "type": "string"
                },
                "payment_no": {
                    "type": "string"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.OrderProduct"
                    }
                },
                "recipe_no": {
                    "type": "string"
                },
                "rounding": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "store": {
                    "type": "string"
                },
                "subtotal": {
                    "type": "number"
                },
                "tax_amount": {
                    "type": "number"
                },
                "tax_percent": {
                    "type": "number"
                },
                "teller": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "total": {
                    "type": "number"
                }
            }
        },
        "model.StoreProduct": {
            "type": "object",
            "required": [
                "barcode",
                "category",
                "code",
                "currency",
                "name",
                "sell_price",
                "store",
                "unit"
            ],
            "properties": {
                "barcode": {
                    "type": "string"
                },
                "buy_price": {
                    "type": "number"
                },
                "category": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "qty": {
                    "type": "integer"
                },
                "sell_price": {
                    "type": "number"
                },
                "store": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "model.Token": {
            "type": "object",
            "required": [
                "token",
                "user_id"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}